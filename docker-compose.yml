# services:
#   backend:
#     build: ./backend
#     command: python manage.py runserver 0.0.0.0:8000
#     volumes:
#       - ./backend:/app
#     ports:
#       - "8000:8000"
#     environment:
#       - DEBUG=1
#       - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1
#     depends_on:
#       - db

#   frontend:
#     build: ./frontend
#     volumes:
#       - ./frontend:/app
#       - /app/node_modules
#     ports:
#       - "3000:3000"
#     environment:
#       - NODE_ENV=development
#     depends_on:
#       - backend

#   db:
#     image: postgres:latest
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=mydatabase
#       - POSTGRES_USER=myuser
#       - POSTGRES_PASSWORD=mypassword

# volumes:
#   postgres_data:

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - .env  
    volumes:
      - ./backend:/app
      - ./backend/staticfiles:/app/staticfiles
    ports:
      - "8000:8000"
    depends_on:
      - db
  
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf  # Replace with your actual Nginx config path
      - ./backend/staticfiles:/app/staticfiles
    ports:
      - "80:80"
    depends_on:
      - backend      

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:80"
    env_file:
      - .env
    depends_on:
      - backend

  db:
    image: postgres:alpine
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}  

volumes:
  postgres_data:
  