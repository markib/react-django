# upstream frontend_server {
#     server frontend:3000;
# }

upstream backend_server {
    server backend:8000;
}


server {
    listen 8080;
    server_name localhost;  # Replace with your domain or IP
    # root /var/www/frontend;
    # try_files $uri $uri/ /index.html;
    # include /etc/nginx/mime.types;
    # server_tokens off;

    # proxy_http_version 1.1;
    # proxy_set_header Upgrade $http_upgrade;
    # proxy_set_header Connection 'upgrade';
    # proxy_set_header Host $host;
    # proxy_cache_bypass $http_upgrade;

    location /static/ {
        # alias /app/staticfiles/;  # Path to 'staticfiles' inside the container
        alias /var/www/frontend/static/;  # Adjust this path based on your setup
        autoindex on;
    }

    location /api/ {
        proxy_pass http://backend_server;  # 'web' is the name of your service in docker-compose.yml
        # proxy_set_header Host $host;
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header X-Forwarded-Proto $scheme;
    }
    location / {
        # root /usr/share/nginx/html;  # Serve static assets from the React build
        # index index.html;  # Default to index.html
        # try_files $uri $uri/ /index.html;  # Fallback to index.html for client-side routing
        # proxy_pass http://frontend:3000;
        # proxy_set_header Host $host;
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header X-Forwarded-Proto $scheme;
        # proxy_pass http://frontend_server;
        root /var/www/frontend;
		try_files $uri $uri/ /index.html;
        
    }

}
